/*
 * This file represents the UI for the google map.
 * This file also consists of the functionality to display patient's address on the Google map.
 */
/*
 * File: app/view/Mappop.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

var infowindow = new google.maps.InfoWindow();
var marker = new google.maps.Marker();
var addrResult="";

Ext.define('MyApp.view.Mappop', {
    extend: 'Ext.Container',
    alias: 'widget.Mappop',

    config: {
        centered: true,
        height: '80%',
        style: 'border:1px dotted #969696;',
        hideOnMaskTap: true,
        layout: {
            type: 'vbox'
        },
        modal: true,
        cls: [
            'mappop'
        ],
        hideAnimation: {
            type: 'popOut',
            duration: 250,
            easing: 'ease-out'
        },
        showAnimation: {
            type: 'popIn',
            duration: 250,
            easing: 'ease-out'
        },
        items: [
            {
                xtype: 'panel',
                height: 40,
                layout: {
                    type: 'hbox'
                },
                items: [
                    {
                        xtype: 'panel',
                        flex: 1,
                        cls: [
                            'demo_headersection'
                        ],
                        height: 40,
                        items: [
                            {
                                xtype: 'label',
                                cls: [
                                    'demo_header'
                                ],
                                html: 'LOCATION'
                            }
                        ]
                    },
                    {
                        xtype: 'panel',
                        padding: '2 0 0 0',
                        style: 'background-color:#6d6d6d;',
                        width: 46,
                        items: [
                            {
                                xtype: 'button',
                                id: 'close2',
                                itemId: 'mybutton2'
                            }
                        ]
                    }
                ]
            },
            {
                xtype: 'panel',
                flex: 1,
                layout: {
                    type: 'fit'
                },
                items: [
                    {
                        xtype: 'map',
                        id : 'mymap',
                        height: 200,
                        itemId: 'mymap',
                        mapOptions: {
                            zoomControl: true,
                            panControl: true,
                            rotateControl: false,
                            streetViewControl: false,
                            mapTypeControl: false,
                            
                        },
                        listeners: 
                            {
                            	initialize : function(component, options) {
                                    var gMap = this.getMap();

                                    // add traffic layer
                                    var trafficLayer = new google.maps.TrafficLayer();
                                    trafficLayer.setMap(gMap);
                                  /*  codeAddress();
                                    console.log("Reached");*/
                                    
                                    
                                },
                                painted : function( component, eOpts ){
                                	console.log("Entered paint");
                                	codeAddress();
                                	var map = Ext.getCmp('mymap');
                                	map.setMapCenter(addrResult);
                                }
                            }                       
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onCloseTap',
                event: 'tap',
                delegate: '#close2'
            }    
        ]
    },

    onCloseTap: function(button, e, options) {
    	 this.hide();
    }
});

//Functionality to display address on Google map in the app along with the marker and info-window, displaying the location.
function codeAddress() {

	  var address = patientInfo.streetaddress+","+patientInfo.city+","+patientInfo.state;

	  var map = Ext.getCmp('mymap');

	  var geocoder = new google.maps.Geocoder();
	  geocoder.geocode( { 'address': address}, function(results, status) {
	    if (status == google.maps.GeocoderStatus.OK) {
	    	 addrResult = results[0].geometry.location;
//set the center of the map to the patient's address.
	     map.setMapCenter(results[0].geometry.location);
//Associate the marker with the map.
	     marker.setMap(map.getMap());
//Place the marker on the map.	     
	     marker.setPosition(results[0].geometry.location);
//Set the address text to the info-window.	     
	     infowindow.setContent(address);
//Show the info-window on the map.	     
	      infowindow.open(map.getMap(),marker);
	    } else {
	    	//Address not found.
	    	 navigator.notification.alert("Sorry Address could not be found.", function() {}, "pHmHealth");	 
	    }
	  });
	}
